global proc shelf_cgtools () {
    shelfButton
        -annotation "Temporarily splits a mesh based on the current selection so that whole parts can be flood selected"
        -label "Fill Selection"
        -imageOverlayLabel "FSEL"
        -image1 "pythonFamily.png"
        -command "from cgtools.maya.ui.fill_selection import fillSelection\nfillSelection()"
        -sourceType "python"
    ;

    shelfButton
        -annotation "Sorts the selected items in the outliner (defaults to name)"
        -label "Sort Selected"
        -imageOverlayLabel "SORT"
        -image1 "pythonFamily.png"
        -command "selection = cmds.ls(selection=True)\nkeys = []\nfor selected in selection:\n    selected = selected.rpartition(\"|\")[2]\n    key = selected.rstrip(\"0123456789\")\n    key += selected[len(key):].zfill(12)\n    keys.append(key)\nfor _, selected in sorted(zip(keys, selection)):\n    cmds.reorder(selected, back=True)"
        -sourceType "python"
        -menuItem "Sort by Y (center)" ("selection = cmds.ls(selection=True)\nfor selected in sorted(selection, key=lambda selected: -cmds.objectCenter(selected, y=True)):\n    cmds.reorder(selected, back=True)")
        -menuItemPython 0
        -menuItem "Sort by Y (top)" ("selection = cmds.ls(selection=True)\nfor selected in sorted(selection, key=lambda selected: -cmds.exactWorldBoundingBox(selected, calculateExactly=True)[4]):\n    cmds.reorder(selected, back=True)")
        -menuItemPython 1
    ;

    shelfButton
        -annotation "Renames the selected items"
        -label "Rename Selected"
        -imageOverlayLabel "REN"
        -image1 "pythonFamily.png"
        -command "from PySide2.QtWidgets import QInputDialog\nnewName, ok = QInputDialog.getText(None, \"Rename To...\", \"New Name:\")\nif ok:\n    for selected in cmds.ls(selection=True):\n        cmds.rename(selected, newName)"
        -sourceType "python"
    ;

    addShelfSeparator();

    shelfButton
        -annotation "Reloads Python modules without needing to reopen Maya"
        -imageOverlayLabel "RLD"
        -image1 "pythonFamily.png"
        -command "from cgtools.agnostic.ui.module_reloader import ModuleReloaderWidget\nwidget = ModuleReloaderWidget()\nwidget.show()"
        -sourceType "python"
    ;
}
